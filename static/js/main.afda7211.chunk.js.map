{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5-rrd-v6/pages/Eror404.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","accordion","first","to","second","three","Message","props","osn","src","avatar","alt","messageBlock","names","name","text","message","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newObject","id","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","block","numbers","strings","PATH","Pages","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.afda7211.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"osn\":\"Message_osn__1hEOw\",\"messageBlock\":\"Message_messageBlock__3LR-N\",\"names\":\"Message_names__160jx\",\"text\":\"Message_text__EqJBg\",\"time\":\"Message_time__1nY7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordion\":\"Header_accordion__1kJh2\",\"first\":\"Header_first__JBZ85\",\"second\":\"Header_second__2ZOAA\",\"three\":\"Header_three__1gorz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2wlGI\",\"superInput\":\"SuperInputText_superInput__ZdqAi\",\"errorInput\":\"SuperInputText_errorInput__UBbPK\",\"error\":\"SuperInputText_error__17sF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2E_UC\",\"red\":\"SuperButton_red__2CtSO\",\"button\":\"SuperButton_button__38W1w\",\"blink\":\"SuperButton_blink__2CL_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Eror404_block__23fNm\",\"numbers\":\"Eror404_numbers__32y_Q\",\"strings\":\"Eror404_strings__1QdyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3SIL-\",\"error\":\"Greeting_error__2FNEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__18vh8\",\"testSpanError\":\"HW4_testSpanError__ew-4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2aC9u\",\"checkbox\":\"SuperCheckbox_checkbox__11ZGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sQwk\"};","import React from 'react'\nimport s from \"./Header.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Header() {\n    return (\n        <div className={s.accordion}>\n            {/*// add NavLinks*/}\n            <span ><NavLink className={s.first} to='/pre-junior'>pre junior </NavLink></span>\n            <span ><NavLink to='junior' className={s.second}>junior </NavLink></span>\n            <span ><NavLink to='junior+' className={s.three}>junior+ </NavLink></span>\n        </div>\n\n    )\n}\n\nexport default Header\n","import React from 'react'\n// import * as url from \"url\";\nimport s from './Message.module.css'\n\ntype propsTitle = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport const Message = (props: propsTitle) => {\n    return (\n        <div className={s.osn}>\n            <img src={props.avatar} alt=\"Изображение пользователя\"/>\n\n            <div className={s.messageBlock}>\n                <p className={s.names}>{props.name}</p>\n                <p className={s.text}>{props.message}</p>\n                <p className={s.time}>{props.time}</p>\n            </div>\n\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport {Message} from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://cdn.mos.cms.futurecdn.net/H87432WX74XBos7aUqDmfP-1200-80.jpg',\n    name: 'Александр',\n    message: 'My first home work',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number)=> void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback (props.affair._id)}// need to fix\n\n    return (\n        <div>\n            {props.affair.name} {props.affair.priority}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}// need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all'){\n        return affairs}\n    if (filter === 'high'){\n        return affairs.filter(f=>f.priority=== 'high')\n    } if (filter === 'low'){\n        return affairs.filter(f=>f.priority === 'low')\n    }else {\n        return affairs.filter(f => f.priority === 'middle')\n    }\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(f=>f._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: any // need to fix any\n    setNameCallback: any // need to fix any\n    addUser: any // need to fix any\n    error: any // need to fix any\n    totalUsers: any // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.error: s.someClass// need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if (e.currentTarget.value.trim() && error) {\n            setError(\"\")\n        }\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (!name.trim()) {\n            return setError(\"Error\")\n        } else {\n            addUserCallback(name)\n            alert(`Hello ${name.trim()} !`)\n            setName('')\n        }\n        // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport { v1 } from 'uuid'\n\n// types\nexport type UserType = {\n    id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nexport function HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let newObject ={id: v1(), name: \"name\"}\n        setUsers([...users, newObject]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport s from \"./Eror404.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.block}>\n            <div className={s.numbers}>404</div>\n            <div className={s.strings}>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n\n                он отрисуется если пользователь захочет попасть на несуществующую страницу\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\r\n\r\nfunction App() {\r\n            return (\r\n            <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}